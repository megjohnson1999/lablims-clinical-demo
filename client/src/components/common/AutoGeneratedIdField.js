import React from 'react';
import { 
  TextField, 
  InputAdornment, 
  CircularProgress,
  Tooltip,
  IconButton
} from '@mui/material';
import { Refresh as RefreshIcon, Info as InfoIcon } from '@mui/icons-material';

/**
 * Component to display auto-generated ID fields
 * @param {Object} props
 * @param {string} props.label - Field label
 * @param {number} props.value - The generated ID value
 * @param {number} props.nextId - The next ID that will be generated
 * @param {boolean} props.loading - Whether the ID is being fetched
 * @param {string} props.error - Error message if ID generation failed
 * @param {Function} props.onRefresh - Function to refetch the ID
 * @param {boolean} props.isEditMode - Whether in edit mode
 * @param {string} props.helperText - Additional helper text
 */
const AutoGeneratedIdField = ({ 
  label = 'ID',
  value, 
  nextId, 
  loading, 
  error, 
  onRefresh,
  isEditMode = false,
  helperText
}) => {
  if (isEditMode) {
    return null; // Don't show ID field when editing
  }

  const getHelperText = () => {
    if (error) return `Error: ${error}`;
    if (helperText) return helperText;
    if (nextId) return `Next available ID will be: ${nextId}`;
    return 'Auto-generated on save';
  };

  return (
    <TextField
      fullWidth
      label={label}
      value={loading ? '' : (value || '')}
      disabled
      error={!!error}
      helperText={getHelperText()}
      InputProps={{
        readOnly: true,
        startAdornment: loading ? (
          <InputAdornment position="start">
            <CircularProgress size={20} />
          </InputAdornment>
        ) : null,
        endAdornment: (
          <InputAdornment position="end">
            {!loading && (
              <>
                <Tooltip title="This ID is automatically generated">
                  <IconButton size="small" edge="end">
                    <InfoIcon fontSize="small" />
                  </IconButton>
                </Tooltip>
                {error && (
                  <Tooltip title="Retry ID generation">
                    <IconButton size="small" onClick={onRefresh} edge="end">
                      <RefreshIcon fontSize="small" />
                    </IconButton>
                  </Tooltip>
                )}
              </>
            )}
          </InputAdornment>
        ),
      }}
      sx={{
        '& .MuiInputBase-input.Mui-disabled': {
          WebkitTextFillColor: 'rgba(0, 0, 0, 0.87)',
          color: 'rgba(0, 0, 0, 0.87)',
        },
      }}
    />
  );
};

export default AutoGeneratedIdField;